enclave {
    include "../Enclave/msse2/emmintrin.h"
    
    trusted {
        /* define ECALLs here. */
        public int generate_random_number(void);
        public void new_network([in, string] const char* str);
        
        // classification
        public int cnn_outsize();
        public int classification([in, count = cnt]float *testimage, int cnt);

        public float get_estimated_accuracy();

    };

    untrusted {
        /* define OCALLs here. */
        void ocall_print([in, string]const char* str);
        void open_file([in, string] const char* str);
        void close_file();
        void read_file([out, size = sz] char *dest, int sz);
        void mojo_sleep(unsigned milliseconds);
        
        int open_networkfile([in, string] const char* str); // filename
        int open_outputnetworkfile([in, string] const char* str);
        
        void ocall_fprint_networkfile([in, string]const char* str); // content
        
        char ocall_fread_networkfile();
        int ocall_getint();
        float ocall_getfloat();
        
        void ocall_read([out, size = sz] char *src, int sz);
        void ocall_read_outenclave(uint64_t src, int sz);
        
        void ocall_write([in, size = sz] char *src, int sz);
        
        void end_this_line();
        
        void close_networkfile();
        void close_outputnetworkfile();
        
        uint64_t ocall_newmatrix([out, count = 1] uint64_t * px, [out, count = 1] int *size, int cols, int rows, int chans);
        void ocall_fill_uniform(uint64_t pmatrix, float range);
        void ocall_fill_normal(uint64_t pmatrix, float std);
    };
};
